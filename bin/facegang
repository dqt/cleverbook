#!/usr/bin/env ruby

require 'optparse'
require 'methadone'
require 'facegang.rb'

class App
  include Methadone::Main
  include Methadone::CLILogging
  include Facegang

  main do |config_file, tool|

    info "Started program"

    begin
      info "Loading configuration file"
      debug "CONFIG LOCATION: #{Dir.pwd}/#{config_file}"
      config = YAML::load(File.read("#{Dir.pwd}/#{config_file}"))
      debug "Loaded config successfully"
    rescue => e
      warn "Error loading configuration file"
      error "#{e}"
    end

    if tool == "autoresponder" and options["install"]
      install_app_start_autoresponder(config)
    elsif tool == "autoresponder" and !options["install"]
      start_autoresponder(config)
    end
      
  end

  # supplemental methods here
  def self.install_app_start_autoresponder(config)
  # Install facebook app and start autoresponder
    begin
      # Install facebook app, get access token to start responder
      info "Installing facebook app and getting token"
      session = FacebookMacros.install_app_get_token(config)
      info "ACCESS TOKEN GRANTED: #{session[:access_token]}"

      # Use Graph API to get our users profile
      info "Polling Graph API for profile data"
      @graph = FacebookMacros.get_graph(session[:access_token])
      @profile = FacebookMacros.get_my_profile(@graph)
      debug "PROFILE: #{@profile.to_s}"
      info "Starting autoresponder..."

      # Build new client
      client = Autoresponder.build_client(@profile["id"], config["app_id"], session[:access_token], config["app_secret"])
      # Run message call back thread
      Autoresponder.run_response_thread(client, @profile["id"])
    rescue => e
      error "#{e}"
    end
  end

  def self.start_autoresponder(config)
  # Skip app install, just get access token and start responder
    begin
      # Install facebook app, get access token to start responder
      info "Installing facebook app and getting token"
      session = FacebookMacros.already_installed_get_token(config)
      info "ACCESS TOKEN GRANTED: #{session[:access_token]}"

      # Use Graph API to get our users profile
      info "Polling Graph API for profile data"
      @graph = FacebookMacros.get_graph(session[:access_token])
      @profile = FacebookMacros.get_my_profile(@graph)
      debug "PROFILE: #{@profile.to_s}"
      info "Starting autoresponder..."

      # Build new client
      client = Autoresponder.build_client(@profile["id"], config["app_id"], session[:access_token], config["app_secret"])
      # Run message call back thread
      Autoresponder.run_response_thread(client, @profile["id"])
    rescue => e
      error "#{e}"
    end
  end

  # Declare command-line interface here
  description "Facebook e-whoring toolkit"

  # Accept flags via:
  # on("--flag VAL","Some flag")
  # options[flag] will contain VAL
  #
  # Specify switches via:
  on("--[no-]install", "Install Facebook app to profile")
  #
  # Or, just call OptionParser methods on opts
  #
  # Require an argument
  arg :config_file, "Path to the configuration file"
  arg :tool, "Name of the tool you'd like to use"
  #
  # # Make an argument optional
  # arg :optional_arg, :optional

  version Facegang::VERSION

  # Global logging object
  use_log_level_option
  # self.logger = Logger.new('facegang.log')
  # Added comment to test new git branching workflow.

  go!
end
